<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
	                    http://www.springframework.org/schema/tx 
		                http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		                http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<context:annotation-config />
	<!-- activer l'auto scan des composants (beans) -->
	<context:component-scan
		base-package="com.adaming.myapp" />

	<!-- localisation du fichier de proprietes : jdbc.properties -->
	<context:property-placeholder
		location="classpath:jdbc.properties" />


	<!-- bean du dataSource -->
	<bean id="datasourceBean"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">

		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

	</bean>

	<!-- bean de la session factory -->
	<bean id="sessionFactoryBean"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">

		<!-- injection du datasource -->
		<property name="dataSource" ref="datasourceBean" />

		<!-- les classes annotÃ©es -->
		<property name="annotatedClasses">
			<value>

				com.adaming.myapp.entity.Etudiant,
				com.adaming.myapp.entity.Matiere,
				com.adaming.myapp.entity.Roles,
				com.adaming.myapp.entity.Users
			</value>

		</property>

		<!-- proprietes d'hibernate -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${jdbc.hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${jdbc.hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${jdbc.hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
	</bean>

	<!-- detection des annotations des transactions : @Transactional -->
	<tx:annotation-driven
		transaction-manager="transactionManagerBean" />


	<!-- bean du transaction manager : gestion des transactions -->
	<bean id="transactionManagerBean"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">

		<!-- injection de la session factory -->
		<property name="sessionFactory" ref="sessionFactoryBean" />

	</bean>

<!-- 	<security:http> -->
<!-- 		<security:intercept-url -->
<!-- 			pattern="/Etudiant/Ajout"  access="ROLE_ADMIN"/> -->
<!-- 		<security:intercept-url pattern="/Etudiant" -->
<!-- 			 /> -->
<!-- 		<security:intercept-url -->
<!-- 			pattern="/Matiere/Ajout"  /> -->
<!-- 		<security:form-login   login-page="/login"  -->
<!-- 		    default-target-url="/HomeController/home" authentication-failure-url="/erreur" /> -->
<!-- 	</security:http> -->
<!-- 	<security:authentication-manager> -->
<!-- 		<security:authentication-provider> -->
<!-- 		<security:jdbc-user-service data-source-ref="datasourceBean"  -->
<!-- 		authorities-by-username-query="select u.username, r.rolename  -->
<!-- 		from users u, roles r  where u.idUser = r.idUser and u.username =? " -->
		
<!-- 		users-by-username-query="select username,password, activated   -->
<!-- 		from users where username=?"/> -->
<!-- 			<security:user-service> -->
<!-- 				<security:user name="admin" password="admin"  -->
<!-- 					authorities="ROLE_ADMIN" /> -->
<!-- 				<security:user name="admin2" password="admin2" -->
<!-- 					authorities="ROLE_ADMIN" /> -->
<!-- 			</security:user-service> -->
<!-- 		</security:authentication-provider> -->

<!-- 	</security:authentication-manager> -->

</beans>
